{"version":3,"sources":["Components/Holdings/Holdings.module.css","Components/UI/Card/Card.module.css","Components/Stocks/Stocks.module.css","Components/Stocks/Stock.module.css","Components/Holdings/Holding.module.css","Components/PurchaseAndSell/PurchaseAndSell.module.css","Components/Stocks/Stock.js","Components/Stocks/Stocks.js","Components/Holdings/Holding.js","Components/Holdings/Holdings.js","Components/PurchaseAndSell/PurchaseBar.js","Components/PurchaseAndSell/SellBar.js","Components/PurchaseAndSell/PurchaseAndSell.js","Components/UI/Card/Card.js","App.js","reportWebVitals.js","index.js","Components/PurchaseAndSell/Bar.module.css","App.module.css"],"names":["module","exports","Stock","props","companyName","company","name","companyPrice","price","className","styles","stock","toFixed","Stocks","companies","stocks","Holding","numberOfShares","shares","holding","Holdings","holdings","holdingsValue","PurchaseBar","useState","setShares","selectedCompany","setSelectedCompany","Bar","type","defaultValue","min","step","onChange","event","target","value","hidden","onClick","newShares","onPurchase","SellBar","onSell","PurchaseAndSell","cash","setCash","i","length","cashToRemove","cashToAdd","Card","cardTitle","title","App","companyArray","setCompanyArray","holdingsArray","setHoldingsArray","setHoldingsValue","Titles","updatePrices","newArray","forEach","max","Math","random","timer","setTimer","calculateNewHoldingsValue","holdingsSum","parseFloat","setTimeout","row","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.a4bb87fe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"holdings\":\"Holdings_holdings__MQm8s\",\"holdingsValue\":\"Holdings_holdingsValue__2smGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__7DPpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stocks\":\"Stocks_stocks__3FCBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stock\":\"Stock_stock__3lJ12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"holding\":\"Holding_holding__2drkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PurchaseAndSell\":\"PurchaseAndSell_PurchaseAndSell__2xI2N\"};","import styles from \"./Stock.module.css\";\r\n\r\nconst Stock = (props) => {\r\n  const companyName = props.company.name;\r\n  let companyPrice = props.company.price;\r\n\r\n  return (\r\n    <li className={styles.stock}>\r\n      <p>{companyName}</p>\r\n      <p>${companyPrice.toFixed(2)}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n","import styles from \"./Stocks.module.css\";\r\nimport Stock from \"./Stock\";\r\n\r\nconst Stocks = (props) => {\r\n  const companies = props.companies;\r\n\r\n  return (\r\n    <ul className={styles.stocks}>\r\n      <Stock company={companies[0]}></Stock>\r\n      <Stock company={companies[1]}></Stock>\r\n      <Stock company={companies[2]}></Stock>\r\n      <Stock company={companies[3]}></Stock>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Stocks;\r\n","import { useState } from \"react\";\r\nimport styles from \"./Holding.module.css\";\r\n\r\nconst Holding = (props) => {\r\n  const companyName = props.companyName;\r\n  const numberOfShares = props.shares;\r\n\r\n  return (\r\n    <li className={styles.holding}>\r\n      <p>{companyName}</p>\r\n      <p>{numberOfShares}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Holding;\r\n","import styles from \"./Holdings.module.css\";\r\nimport Holding from \"./Holding\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Holdings = (props) => {\r\n  const companies = props.companies;\r\n  const holdings = props.holdings;\r\n  const holdingsValue = props.holdingsValue.toFixed(2);\r\n\r\n  return (\r\n    <div>\r\n      <ul className={styles.holdings}>\r\n        <Holding\r\n          companyName={companies[0].name}\r\n          shares={holdings[0].shares}\r\n        ></Holding>\r\n        <Holding\r\n          companyName={companies[1].name}\r\n          shares={holdings[1].shares}\r\n        ></Holding>\r\n        <Holding\r\n          companyName={companies[2].name}\r\n          shares={holdings[2].shares}\r\n        ></Holding>\r\n        <Holding\r\n          companyName={companies[3].name}\r\n          shares={holdings[3].shares}\r\n        ></Holding>\r\n      </ul>\r\n      <p className={styles.holdingsValue}>\r\n        Total value of holdings: <span>${holdingsValue}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Holdings;\r\n","import { useState } from \"react\";\r\nimport styles from \"./Bar.module.css\";\r\n\r\nconst PurchaseBar = (props) => {\r\n  const companies = props.companies;\r\n  const [shares, setShares] = useState(0);\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n\r\n  function shareNumberHandler(event) {\r\n    let numberOfShares = event.target.value;\r\n    setShares(numberOfShares);\r\n  }\r\n\r\n  function companyNameHandler(event) {\r\n    let companyName = event.target.value;\r\n    setSelectedCompany(companyName);\r\n  }\r\n\r\n  function addedPurchaseHandler() {\r\n    if (shares !== \"\" && selectedCompany !== \"\") {\r\n      const newShares = {\r\n        name: selectedCompany,\r\n        shares: shares,\r\n      };\r\n      props.onPurchase(newShares);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Bar}>\r\n      Buy{\" \"}\r\n      <input\r\n        type=\"number\"\r\n        defaultValue=\"\"\r\n        min=\"0\"\r\n        step=\"0\"\r\n        onChange={shareNumberHandler}\r\n      />{\" \"}\r\n      Shares of{\" \"}\r\n      <select name=\"companyName\" onChange={companyNameHandler}>\r\n        <option hidden></option>\r\n        <option>IBM</option>\r\n        <option>Amazon</option>\r\n        <option>Microsoft</option>\r\n        <option>Disney</option>\r\n      </select>\r\n      <button type=\"submit\" onClick={addedPurchaseHandler}>\r\n        Purchase\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseBar;\r\n","import { useState } from \"react\";\r\nimport styles from \"./Bar.module.css\";\r\n\r\nconst SellBar = (props) => {\r\n  const companies = props.companies;\r\n  const [shares, setShares] = useState(0);\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n\r\n  function shareNumberHandler(event) {\r\n    let numberOfShares = event.target.value;\r\n    setShares(numberOfShares);\r\n  }\r\n\r\n  function companyNameHandler(event) {\r\n    let companyName = event.target.value;\r\n    setSelectedCompany(companyName);\r\n  }\r\n\r\n  function sellHandler() {\r\n    if (shares !== \"\" && selectedCompany !== \"\") {\r\n      const newShares = {\r\n        name: selectedCompany,\r\n        shares: shares,\r\n      };\r\n      props.onSell(newShares);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Bar}>\r\n      Sell{\" \"}\r\n      <input\r\n        type=\"number\"\r\n        defaultValue=\"\"\r\n        min=\"0\"\r\n        step=\"0\"\r\n        onChange={shareNumberHandler}\r\n      />{\" \"}\r\n      Shares of{\" \"}\r\n      <select name=\"companyName\" onChange={companyNameHandler}>\r\n        <option hidden></option>\r\n        <option>IBM</option>\r\n        <option>Amazon</option>\r\n        <option>Microsoft</option>\r\n        <option>Disney</option>\r\n      </select>\r\n      <button type=\"submit\" onClick={sellHandler}>\r\n        Sell\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellBar;\r\n","import { useState } from \"react\";\r\nimport PurchaseBar from \"./PurchaseBar\";\r\nimport SellBar from \"./SellBar\";\r\nimport styles from \"./PurchaseAndSell.module.css\";\r\n\r\nconst PurchaseAndSell = (props) => {\r\n  const [cash, setCash] = useState(1000);\r\n  const companies = props.companies;\r\n  const holdings = props.holdings;\r\n\r\n  function purchaseHandler(newShares) {\r\n    for (let i = 0; i < companies.length; i++) {\r\n      if (companies[i].name === newShares.name) {\r\n        let cashToRemove = companies[i].price * newShares.shares;\r\n        if (cash - cashToRemove >= 0) {\r\n          setCash(cash - cashToRemove);\r\n          props.onPurchase(newShares);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function sellHandler(newShares) {\r\n    for (let i = 0; i < holdings.length; i++) {\r\n      if (holdings[i].name === newShares.name) {\r\n        if (holdings[i].shares > 0) {\r\n          let cashToAdd = companies[i].price * newShares.shares;\r\n          setCash(cash + cashToAdd);\r\n          props.onSell(newShares);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.PurchaseAndSell}>\r\n      <PurchaseBar\r\n        companies={companies}\r\n        onPurchase={purchaseHandler}\r\n      ></PurchaseBar>\r\n      <SellBar companies={companies} onSell={sellHandler}></SellBar>\r\n      <p>You currently have ${cash.toFixed(2)} in cash</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseAndSell;\r\n","import styles from \"./Card.module.css\";\r\nimport Stocks from \"../../Stocks/Stocks\";\r\nimport Holdings from \"../../Holdings/Holdings\";\r\nimport PurchaseAndSell from \"../../PurchaseAndSell/PurchaseAndSell\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Card = (props) => {\r\n  const cardTitle = props.title;\r\n  const companies = props.companies;\r\n  const holdings = props.holdings;\r\n  const holdingsValue = props.holdingsValue;\r\n\r\n  function purchaseHandler(newShares) {\r\n    props.onPurchase(newShares);\r\n  }\r\n\r\n  function sellHandler(newShares) {\r\n    props.onSell(newShares);\r\n  }\r\n\r\n  return (\r\n    <div className={styles.Card}>\r\n      <h1>{cardTitle}</h1>\r\n      {cardTitle === \"Stocks\" && <Stocks companies={companies} />}\r\n      {cardTitle === \"Holdings\" && (\r\n        <Holdings\r\n          companies={companies}\r\n          holdings={holdings}\r\n          holdingsValue={holdingsValue}\r\n        />\r\n      )}\r\n      {cardTitle === \"Purchase and Sell Stocks\" && (\r\n        <PurchaseAndSell\r\n          companies={companies}\r\n          holdings={holdings}\r\n          onPurchase={purchaseHandler}\r\n          onSell={sellHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport Card from \"./Components/UI/Card/Card\";\n\nfunction getRandomArbitrary(min, max) {\n  return Math.random() * (max - min) + min;\n}\n\nfunction App(props) {\n  const [companyArray, setCompanyArray] = useState([\n    { name: \"IBM\", price: 82.67 },\n    { name: \"Amazon\", price: 86.62 },\n    { name: \"Microsoft\", price: 87.44 },\n    { name: \"Disney\", price: 93.72 },\n  ]);\n\n  const [holdingsArray, setHoldingsArray] = useState([\n    { name: \"IBM\", shares: 0 },\n    { name: \"Amazon\", shares: 0 },\n    { name: \"Microsoft\", shares: 0 },\n    { name: \"Disney\", shares: 0 },\n  ]);\n\n  const [holdingsValue, setHoldingsValue] = useState(0);\n\n  const Titles = {\n    title1: \"Stocks\",\n    title2: \"Holdings\",\n    title3: \"Purchase and Sell Stocks\",\n  };\n\n  function updatePrices() {\n    let newArray = [...companyArray];\n    newArray.forEach((company) => {\n      company.price = getRandomArbitrary(30, 180);\n    });\n    setCompanyArray(newArray);\n  }\n\n  const [timer, setTimer] = useState(false);\n\n  setTimeout(() => {\n    if (!timer) {\n      updatePrices();\n      calculateNewHoldingsValue();\n      setTimer(true);\n    } else {\n      setTimeout(() => {\n        setTimer(false);\n      }, 2000);\n    }\n  }, 2000);\n\n  function purchaseHandler(newShares) {\n    let newArray = [...holdingsArray];\n    newArray.forEach((element) => {\n      if (element.name === newShares.name) {\n        element.shares += parseFloat(newShares.shares);\n      }\n    });\n    setHoldingsArray(newArray);\n    calculateNewHoldingsValue();\n  }\n\n  function sellHandler(newShares) {\n    let newArray = [...holdingsArray];\n    newArray.forEach((element) => {\n      if (element.name === newShares.name) {\n        if (element.shares - parseFloat(newShares.shares) < 0) {\n          element.shares = 0;\n        } else {\n          element.shares -= parseFloat(newShares.shares);\n        }\n      }\n    });\n    setHoldingsArray(newArray);\n    calculateNewHoldingsValue();\n  }\n\n  function calculateNewHoldingsValue() {\n    let holdingsSum = 0;\n    for (let i = 0; i < holdingsArray.length; i++) {\n      holdingsSum +=\n        parseFloat(companyArray[i].price) * parseFloat(holdingsArray[i].shares);\n    }\n\n    setHoldingsValue(holdingsSum);\n  }\n\n  return (\n    <div className={styles.App}>\n      <div className={styles.row}>\n        <Card companies={companyArray} title={Titles.title1}></Card>\n        <Card\n          companies={companyArray}\n          title={Titles.title2}\n          holdings={holdingsArray}\n          holdingsValue={holdingsValue}\n        ></Card>\n      </div>\n      <div className={styles.row}>\n        <Card\n          companies={companyArray}\n          holdings={holdingsArray}\n          title={Titles.title3}\n          onPurchase={purchaseHandler}\n          onSell={sellHandler}\n        ></Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bar\":\"Bar_Bar__1w5Tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__sX35o\",\"row\":\"App_row__oUpnO\"};"],"sourceRoot":""}