{"version":3,"sources":["Components/Holdings/Holdings.module.css","Components/UI/Card/Card.module.css","Components/Stocks/Stocks.module.css","Components/Stocks/Stock.module.css","Components/Holdings/Holding.module.css","Components/PurchaseAndSell/PurchaseAndSell.module.css","Components/Stocks/Stock.js","Components/Stocks/Stocks.js","Components/Holdings/Holding.js","Components/Holdings/Holdings.js","Components/PurchaseAndSell/PurchaseBar.js","Components/PurchaseAndSell/SellBar.js","Components/PurchaseAndSell/PurchaseAndSell.js","Components/UI/Card/Card.js","App.js","reportWebVitals.js","index.js","Components/PurchaseAndSell/Bar.module.css","App.module.css"],"names":["module","exports","Stock","companyName","companyPrice","className","styles","stock","toFixed","Stocks","companies","stocks","map","company","name","price","Holding","shares","holding","Holdings","holdings","holdingsValue","index","PurchaseBar","onPurchase","useState","setShares","selectedCompany","setSelectedCompany","Bar","type","value","min","step","onChange","event","numberOfShares","target","hidden","onClick","SellBar","props","newShares","onSell","PurchaseAndSell","cash","setCash","i","length","cashToRemove","cashToAdd","Card","cardType","title","App","companyArray","setCompanyArray","holdingsArray","setHoldingsArray","setHoldingsValue","timer","setTimer","updatePrices","newArray","forEach","max","Math","random","calculateNewHoldingsValue","holdingsSum","parseFloat","useEffect","interval","setInterval","clearInterval","cards","element","row","slice","card","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.0313458b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"holdings\":\"Holdings_holdings__MQm8s\",\"holdingsValue\":\"Holdings_holdingsValue__2smGC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__7DPpN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stocks\":\"Stocks_stocks__3FCBq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stock\":\"Stock_stock__3lJ12\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"holding\":\"Holding_holding__2drkI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PurchaseAndSell\":\"PurchaseAndSell_PurchaseAndSell__2xI2N\"};","import styles from \"./Stock.module.css\";\r\n\r\nconst Stock = ({ companyName, companyPrice }) => {\r\n  return (\r\n    <li className={styles.stock}>\r\n      <p>{companyName}</p>\r\n      <p>${companyPrice.toFixed(2)}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Stock;\r\n","import styles from \"./Stocks.module.css\";\r\nimport Stock from \"./Stock\";\r\n\r\nconst Stocks = ({ companies }) => {\r\n  return (\r\n    <ul className={styles.stocks}>\r\n      {companies.map((company) => (\r\n        <Stock\r\n          key={company.name}\r\n          companyName={company.name}\r\n          companyPrice={company.price}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Stocks;\r\n","import styles from \"./Holding.module.css\";\r\n\r\nconst Holding = ({ companyName, shares }) => {\r\n  return (\r\n    <li className={styles.holding}>\r\n      <p>{companyName}</p>\r\n      <p>{shares}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Holding;\r\n","import styles from \"./Holdings.module.css\";\r\nimport Holding from \"./Holding\";\r\n\r\nconst Holdings = ({ companies, holdings, holdingsValue }) => {\r\n  return (\r\n    <div>\r\n      <ul className={styles.holdings}>\r\n        {companies.map((company, index) => (\r\n          <Holding\r\n            key={company.name}\r\n            companyName={company.name}\r\n            shares={holdings[index].shares}\r\n          />\r\n        ))}\r\n      </ul>{\" \"}\r\n      <p className={styles.holdingsValue}>\r\n        Total value of holdings: <span>${holdingsValue.toFixed(2)}</span>{\" \"}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Holdings;\r\n","import { useState } from \"react\";\r\nimport styles from \"./Bar.module.css\";\r\n\r\nconst PurchaseBar = ({ onPurchase }) => {\r\n  const [shares, setShares] = useState(\"\");\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n\r\n  /**HANDLERS */\r\n  const shareNumberHandler = (event) => {\r\n    let numberOfShares = event.target.value;\r\n    setShares(numberOfShares);\r\n  };\r\n\r\n  const companyNameHandler = (event) => {\r\n    let companyName = event.target.value;\r\n    setSelectedCompany(companyName);\r\n  };\r\n\r\n  const addedPurchaseHandler = () => {\r\n    if (shares !== \"\" && selectedCompany !== \"\") {\r\n      const newShares = {\r\n        name: selectedCompany,\r\n        shares: shares,\r\n      };\r\n      onPurchase(newShares);\r\n      setSelectedCompany(\"\");\r\n      setShares(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Bar}>\r\n      Buy{\" \"}\r\n      <input\r\n        type=\"number\"\r\n        value={shares}\r\n        min=\"0\"\r\n        step=\"0\"\r\n        onChange={shareNumberHandler}\r\n      />{\" \"}\r\n      Shares of{\" \"}\r\n      <select\r\n        name=\"companyName\"\r\n        onChange={companyNameHandler}\r\n        value={selectedCompany}\r\n      >\r\n        <option hidden></option>\r\n        <option>IBM</option>\r\n        <option>Amazon</option>\r\n        <option>Microsoft</option>\r\n        <option>Disney</option>\r\n      </select>\r\n      <button onClick={addedPurchaseHandler}>Purchase</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseBar;\r\n","import { useState } from \"react\";\r\nimport styles from \"./Bar.module.css\";\r\n\r\nconst SellBar = (props) => {\r\n  const [shares, setShares] = useState(\"\");\r\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n\r\n  /**HANDLERS */\r\n  const shareNumberHandler = (event) => {\r\n    let numberOfShares = event.target.value;\r\n    setShares(numberOfShares);\r\n  };\r\n\r\n  const companyNameHandler = (event) => {\r\n    let companyName = event.target.value;\r\n    setSelectedCompany(companyName);\r\n  };\r\n\r\n  const sellHandler = () => {\r\n    if (shares !== \"\" && selectedCompany !== \"\") {\r\n      const newShares = {\r\n        name: selectedCompany,\r\n        shares: shares,\r\n      };\r\n      props.onSell(newShares);\r\n      setSelectedCompany(\"\");\r\n      setShares(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Bar}>\r\n      Sell{\" \"}\r\n      <input\r\n        type=\"number\"\r\n        value={shares}\r\n        min=\"0\"\r\n        step=\"0\"\r\n        onChange={shareNumberHandler}\r\n      />{\" \"}\r\n      Shares of{\" \"}\r\n      <select\r\n        name=\"companyName\"\r\n        onChange={companyNameHandler}\r\n        value={selectedCompany}\r\n      >\r\n        <option hidden></option>\r\n        <option>IBM</option>\r\n        <option>Amazon</option>\r\n        <option>Microsoft</option>\r\n        <option>Disney</option>\r\n      </select>\r\n      <button onClick={sellHandler}>Sell</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SellBar;\r\n","import { useState } from \"react\";\r\nimport PurchaseBar from \"./PurchaseBar\";\r\nimport SellBar from \"./SellBar\";\r\nimport styles from \"./PurchaseAndSell.module.css\";\r\n\r\nconst PurchaseAndSell = ({ companies, holdings, onPurchase, onSell }) => {\r\n  /*VARIABLES*/\r\n  const [cash, setCash] = useState(1000);\r\n\r\n  /*HANDLERS*/\r\n  const purchaseHandler = (newShares) => {\r\n    for (let i = 0; i < companies.length; i++) {\r\n      if (companies[i].name === newShares.name) {\r\n        let cashToRemove = companies[i].price * newShares.shares;\r\n        if (cash - cashToRemove >= 0) {\r\n          setCash(cash - cashToRemove);\r\n          onPurchase(newShares);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const sellHandler = (newShares) => {\r\n    for (let i = 0; i < holdings.length; i++) {\r\n      if (holdings[i].name === newShares.name) {\r\n        if (holdings[i].shares > 0) {\r\n          let cashToAdd = companies[i].price * newShares.shares;\r\n          setCash(cash + cashToAdd);\r\n          onSell(newShares);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.PurchaseAndSell}>\r\n      <PurchaseBar companies={companies} onPurchase={purchaseHandler} />\r\n      <SellBar companies={companies} onSell={sellHandler} />\r\n      <p>You currently have ${cash.toFixed(2)} in cash</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PurchaseAndSell;\r\n","import styles from \"./Card.module.css\";\r\nimport Stocks from \"../../Stocks/Stocks\";\r\nimport Holdings from \"../../Holdings/Holdings\";\r\nimport PurchaseAndSell from \"../../PurchaseAndSell/PurchaseAndSell\";\r\n\r\nconst Card = ({\r\n  cardType,\r\n  title,\r\n  companies,\r\n  holdings,\r\n  holdingsValue,\r\n  onPurchase,\r\n  onSell,\r\n}) => {\r\n  // HANDLERS\r\n  const purchaseHandler = (newShares) => {\r\n    onPurchase(newShares);\r\n  };\r\n\r\n  const sellHandler = (newShares) => {\r\n    onSell(newShares);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.Card}>\r\n      <h1>{title}</h1>\r\n      {cardType === \"stocks\" && <Stocks companies={companies} />}\r\n      {cardType === \"holdings\" && (\r\n        <Holdings\r\n          companies={companies}\r\n          holdings={holdings}\r\n          holdingsValue={holdingsValue}\r\n        />\r\n      )}\r\n      {cardType === \"purchaseandsell\" && (\r\n        <PurchaseAndSell\r\n          companies={companies}\r\n          holdings={holdings}\r\n          onPurchase={purchaseHandler}\r\n          onSell={sellHandler}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { useEffect, useState } from \"react\";\nimport styles from \"./App.module.css\";\nimport Card from \"./Components/UI/Card/Card\";\n\n/*HELPER FUNCTIONS*/\nconst getRandomArbitrary = (min, max) => {\n  return Math.random() * (max - min) + min;\n};\n\nconst App = () => {\n  /*VARIABLES*/\n  const [companyArray, setCompanyArray] = useState([\n    { name: \"IBM\", price: 82.67 },\n    { name: \"Amazon\", price: 86.62 },\n    { name: \"Microsoft\", price: 87.44 },\n    { name: \"Disney\", price: 93.72 },\n  ]);\n\n  const [holdingsArray, setHoldingsArray] = useState([\n    { name: \"IBM\", shares: 0 },\n    { name: \"Amazon\", shares: 0 },\n    { name: \"Microsoft\", shares: 0 },\n    { name: \"Disney\", shares: 0 },\n  ]);\n  const [holdingsValue, setHoldingsValue] = useState(0);\n\n  const [timer, setTimer] = useState(false);\n\n  /*FUNCTIONS*/\n  const updatePrices = () => {\n    let newArray = [...companyArray];\n    newArray.forEach((company) => {\n      company.price = getRandomArbitrary(30, 180);\n    });\n    setCompanyArray(newArray);\n  };\n\n  const calculateNewHoldingsValue = () => {\n    let holdingsSum = 0;\n    for (let i = 0; i < holdingsArray.length; i++) {\n      holdingsSum +=\n        parseFloat(companyArray[i].price) * parseFloat(holdingsArray[i].shares);\n    }\n\n    setHoldingsValue(holdingsSum);\n  };\n\n  /* TIMER (CAN BE OPTIMISED FOR SURE) */\n  useEffect(() => {\n    let interval = null;\n    if (timer) {\n      interval = setInterval(() => {\n        updatePrices();\n        calculateNewHoldingsValue();\n      }, 2000);\n    } else if (!timer) {\n      clearInterval(interval);\n      setTimer(true);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n  //OLD TIMER CODE (WASN'T THE RIGHT BEHAVIOR)\n  // setTimeout(() => {\n  //   if (!timer) {\n  //     updatePrices();\n  //     calculateNewHoldingsValue();\n  //     setTimer(true);\n  //   } else {\n  //     setTimeout(() => {\n  //       setTimer(false);\n  //     }, 2000);\n  //   }\n  // }, 2000);\n\n  /**HANDLERS */\n  const purchaseHandler = (newShares) => {\n    let newArray = [...holdingsArray];\n    newArray.forEach((element) => {\n      if (element.name === newShares.name) {\n        element.shares += parseFloat(newShares.shares);\n      }\n    });\n    setHoldingsArray(newArray);\n    calculateNewHoldingsValue();\n  };\n\n  const sellHandler = (newShares) => {\n    let newArray = [...holdingsArray];\n    newArray.forEach((element) => {\n      if (element.name === newShares.name) {\n        if (element.shares - parseFloat(newShares.shares) < 0) {\n          element.shares = 0;\n        } else {\n          element.shares -= parseFloat(newShares.shares);\n        }\n      }\n    });\n    setHoldingsArray(newArray);\n    calculateNewHoldingsValue();\n  };\n  const cards = [\n    {\n      cardType: \"stocks\",\n      companies: companyArray,\n      title: \"Stocks\",\n      holdings: null,\n      holdingsValue: null,\n    },\n    {\n      cardType: \"holdings\",\n      companies: companyArray,\n      title: \"Holdings\",\n      holdings: holdingsArray,\n      holdingsValue: holdingsValue,\n    },\n    {\n      cardType: \"purchaseandsell\",\n      companies: companyArray,\n      title: \"Purchase and Sell Stocks\",\n      holdings: holdingsArray,\n      holdingsValue: holdingsValue,\n      onPurchase: purchaseHandler,\n      onSell: sellHandler,\n    },\n  ];\n\n  return (\n    <div className={styles.App}>\n      <div className={styles.row}>\n        {cards.slice(0, 2).map((card) => (\n          <Card\n            key={card.cardType}\n            cardType={card.cardType}\n            companies={card.companies}\n            title={card.title}\n            holdings={card.holdings}\n            holdingsValue={card.holdingsValue}\n          />\n        ))}\n      </div>\n      <div className={styles.row}>\n        {cards.slice(-1).map((card) => (\n          <Card\n            key={card.cardType}\n            cardType={card.cardType}\n            companies={card.companies}\n            title={card.title}\n            holdings={card.holdings}\n            onPurchase={card.onPurchase}\n            onSell={card.onSell}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Bar\":\"Bar_Bar__1w5Tx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__sX35o\",\"row\":\"App_row__oUpnO\"};"],"sourceRoot":""}